% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{generate_kmers}
\alias{generate_kmers}
\title{Generate Unique k-mers from Sequence Files}
\usage{
generate_kmers(
  fa_file = NULL,
  fa_obj = NULL,
  fa_type = c("aa", "dna", "rna"),
  translate = FALSE,
  kmer_length = 15
)
}
\arguments{
\item{fa_file}{Character. Path to the input FASTA file. Required if \code{fa_obj} is not provided.}

\item{fa_obj}{Biostrings object. An optional preloaded AAStringSet, DNAStringSet, or RNAStringSet object. If provided, \code{fa_file} will be ignored.}

\item{fa_type}{Character. Type of input sequence. Must be one of \code{c("aa", "dna", "rna")}. Default is \code{"aa"}.}

\item{translate}{Logical. Whether to translate nucleotide sequences to amino acids (only applicable if \code{fa_type} is \code{"dna"} or \code{"rna"}). Default is \code{FALSE}.}

\item{kmer_length}{Integer. Length of k-mers to extract. Default is \code{15}.}
}
\value{
A character vector containing unique k-mers.
}
\description{
This function extracts unique k-mers from a given set of sequences, which can be amino acid (proteins), DNA, or RNA.
It supports reading sequences from FASTA files or directly from in-memory Biostrings objects.
}
\details{
\itemize{
\item For DNA/RNA sequences, the function optionally translates them to amino acids before k-mer extraction (using the standard genetic code).
\item Sequences containing ambiguous characters (e.g., N in DNA or RNA) will be removed by default.
}
}
\examples{
\dontrun{
# Extract AA 15-mers from protein FASTA
kmers <- generate_kmers(fa_file = "proteome.fasta", fa_type = "aa", kmer_length = 15)

# Extract translated 15-mer peptides from DNA
peptides <- generate_kmers(fa_file = "transcripts.fasta", fa_type = "dna",
translate = TRUE, kmer_length = 15)

# Providing in-memory AAStringSet
library(Biostrings)
fa <- readAAStringSet("proteome.fasta")
kmers <- generate_kmers(fa_obj = fa, fa_type = "aa", kmer_length = 15)
}


}
