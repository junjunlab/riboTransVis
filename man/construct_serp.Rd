% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class.R
\name{construct_serp}
\alias{construct_serp}
\title{Construct a Ribotrans Object for Transcriptome or Genome Mapping}
\usage{
construct_serp(
  genome_file = NULL,
  gtf_file = NULL,
  mapping_type = c("transcriptome", "genome"),
  assignment_mode = c("end5", "end3"),
  extend = FALSE,
  extend_upstream = 0,
  extend_downstream = 0,
  total_bam_file = NULL,
  total_sample_name = NULL,
  total_sample_group = NULL,
  IP_bam_file = NULL,
  IP_sample_name = NULL,
  IP_sample_group = NULL,
  choose_longest_trans = FALSE
)
}
\arguments{
\item{genome_file}{A \code{character} string indicating the path to the genome sequence file
if the extend option is \code{TRUE}. Default is NULL.}

\item{gtf_file}{A \code{character} string indicating the path to the GTF annotation file.}

\item{mapping_type}{Character. Either \code{"transcriptome"} or \code{"genome"}, indicating whether
RNA-seq/Ribo-seq alignments are transcriptome-based or genome-based. Default is \code{"transcriptome"}.}

\item{assignment_mode}{Character. Specifies the read assignment strategy: \code{"end5"} (5' end) or \code{"end3"} (3' end).}

\item{extend}{Logical. Whether to extend sequences upstream and downstream of transcripts.
Default is FALSE.}

\item{extend_upstream}{Numeric. Number of bases to extend upstream of transcript start.
Only used when extend = TRUE. Default is 0.}

\item{extend_downstream}{Numeric. Number of bases to extend downstream of transcript end.
Only used when extend = TRUE. Default is 0.}

\item{total_bam_file}{Character vector. Path(s) to BAM file(s) for total ribosome profiling samples.}

\item{total_sample_name}{Character vector. Sample name(s) for total ribosome profiling samples.}

\item{total_sample_group}{Character vector. Group labels or conditions for total ribosome profiling samples.}

\item{IP_bam_file}{Character vector. Path(s) to BAM file(s) for IP ribosome profiling samples.}

\item{IP_sample_name}{Character vector. Sample name(s) for IP ribosome profiling samples.}

\item{IP_sample_group}{Character vector. Group labels or conditions for IP ribosome profiling samples.}

\item{choose_longest_trans}{Logical value indicating whether to select the longest transcript
for each gene. If TRUE, only the longest transcript (based on CDS and transcript length)
will be kept for each gene. This is useful to reduce redundancy when multiple transcript
isoforms exist for a gene. If FALSE (default), all transcripts will be retained.}
}
\value{
An object of class 'serp' containing the processed data.
}
\description{
\code{construct_ribotrans()} generates a structured object with transcript or genomic annotations
and mapped RNA-seq / Ribo-seq library information. It supports selecting the longest transcript for each gene.
}
\details{
The function performs several key steps:
\enumerate{
\item Loads and processes the GTF file to extract transcript information
\item Applies any requested extensions to transcript regions
\item Optionally selects the longest transcript per gene
\item Prepares genome-based transcript features if genome mapping is specified
\item Extracts library information from BAM files
\item Creates and returns a new SERP object with all the processed information
}

The function requires the 'rtracklayer' package for GTF file processing and
'Rsamtools' for BAM file handling.
}
\examples{
\dontrun{
# Basic usage
# Extended usage with transcript extension
serp_obj <- construct_serp(
  genome_file = "path/to/genome.fa",
  gtf_file = "path/to/annotations.gtf",
  mapping_type = "genome",
  assignment_mode = "end5",
  extend = TRUE,
  extend_upstream = 50,
  extend_downstream = 50,
  total_bam_file = c("path/to/total_rep1.bam", "path/to/total_rep2.bam"),
  total_sample_name = c("total_rep1", "total_rep2"),
  IP_bam_file = c("path/to/IP_rep1.bam", "path/to/IP_rep2.bam"),
  IP_sample_name = c("IP_rep1", "IP_rep2"),
  choose_longest_trans = TRUE
)
}


}
