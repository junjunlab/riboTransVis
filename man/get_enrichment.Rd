% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/serp-implementation-methods.R
\name{get_enrichment}
\alias{get_enrichment}
\alias{get_enrichment,serp-method}
\title{Calculate Enrichment from Ribosome Profiling Data}
\usage{
get_enrichment(object, ...)

\S4method{get_enrichment}{serp}(object, smooth = TRUE, window_size = 105)
}
\arguments{
\item{object}{An S4 object containing ribosome profiling data.}

\item{...}{Additional arguments (currently unused).}

\item{smooth}{Logical. Whether to apply smoothing to the enrichment profile. Default: TRUE.}

\item{window_size}{Numeric. Size of the sliding window for smoothing. Default: 105.}
}
\value{
An updated object with calculated enrichment data.

An updated 'serp' object with enrichment data stored in the 'enriched_ratio' slot.
}
\description{
Generic function for calculating enrichment ratios between IP and total samples in selective
ribosome profiling experiments.
}
\details{
This is a generic function that computes enrichment ratios between immunoprecipitated (IP)
and total ribosome profiling samples. The specific implementation depends on the class of the
input object.

For objects of class 'serp', this method calculates the enrichment ratio between
IP and total ribosome profiling samples. The method requires both 'total_occupancy'
and 'ip_occupancy' data to be present in the object.

The enrichment calculation process includes:
\enumerate{
\item Calculating the ratio of IP RPM to total RPM for each position
\item Filtering for coding sequence (CDS) regions
\item Optionally applying smoothing using a sliding window approach
\item When smoothing is applied, confidence intervals are calculated using the Agresti-Coull method
and normalized by the ratio of total mapped reads between IP and total samples
\item When smoothing is not applied, positions are grouped by codon (every 3 nucleotides)
and average enrichment is calculated
}
}
\section{Methods (by class)}{
\itemize{
\item \code{get_enrichment(serp)}: Calculate enrichment ratios for SERP objects

}}
\examples{
\dontrun{
# Create a serp object and process data
serp_obj <- construct_serp(...)
serp_obj <- get_occupancy(serp_obj, serp_exp = "total")
serp_obj <- get_occupancy(serp_obj, serp_exp = "ip")

# Calculate enrichment
serp_obj <- get_enrichment(serp_obj)
}

\dontrun{
# Process a serp object
serp_obj <- get_occupancy(serp_obj, serp_exp = "total")
serp_obj <- get_occupancy(serp_obj, serp_exp = "ip")

# Calculate enrichment with default smoothing
serp_obj <- get_enrichment(serp_obj)

# Calculate enrichment without smoothing
serp_obj <- get_enrichment(serp_obj, smooth = FALSE)

# Calculate enrichment with custom window size
serp_obj <- get_enrichment(serp_obj, window_size = 51)
}

}
