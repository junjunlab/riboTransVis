% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class.R
\name{construct_ribotrans}
\alias{construct_ribotrans}
\title{Construct a Ribotrans Object for Transcriptome or Genome Mapping}
\usage{
construct_ribotrans(
  gtf_file = NULL,
  mapping_type = c("transcriptome", "genome"),
  assignment_mode = c("end5", "end3"),
  RNA_bam_file = NULL,
  RNA_sample_name = NULL,
  Ribo_bam_file = NULL,
  Ribo_sample_name = NULL,
  choose_longest_trans = FALSE
)
}
\arguments{
\item{gtf_file}{A \code{character} string indicating the path to the GTF annotation file.}

\item{mapping_type}{Character. Either \code{"transcriptome"} or \code{"genome"}, indicating whether
RNA-seq/Ribo-seq alignments are transcriptome-based or genome-based. Default is \code{"transcriptome"}.}

\item{assignment_mode}{Character. Specifies the read assignment strategy: \code{"end5"} (5' end) or \code{"end3"} (3' end).}

\item{RNA_bam_file}{A \code{character} vector containing paths to RNA-seq BAM files.}

\item{RNA_sample_name}{A \code{character} vector representing RNA-seq sample names.}

\item{Ribo_bam_file}{A \code{character} vector containing paths to ribosome profiling BAM files.}

\item{Ribo_sample_name}{A \code{character} vector representing ribosome profiling sample names.}

\item{choose_longest_trans}{Logical value indicating whether to select the longest transcript
for each gene. If TRUE, only the longest transcript (based on CDS and transcript length)
will be kept for each gene. This is useful to reduce redundancy when multiple transcript
isoforms exist for a gene. If FALSE (default), all transcripts will be retained.}
}
\value{
An object of class \code{ribotrans} containing BAM file metadata,
library information, and parsed transcriptomic features.
}
\description{
\code{construct_ribotrans()} generates a structured object with transcript or genomic annotations
and mapped RNA-seq / Ribo-seq library information. It supports selecting the longest transcript for each gene.
}
\details{
This function processes the transcriptome annotation and extracts alignment
information from RNA and ribosome profiling BAM files to create
an S4 object of class \code{ribotrans}.

It computes total mapped reads for each BAM file and stores the information
in the \code{library} slot of the \code{ribotrans} object.
}
\examples{
\dontrun{
ribotrans_obj <- construct_ribotrans(
  gtf_file = "example.gtf",
  mapping_type = "transcriptome",
  RNA_bam_file = c("rna1.bam", "rna2.bam"),
  RNA_sample_name = c("sample1", "sample2"),
  Ribo_bam_file = c("ribo1.bam"),
  Ribo_sample_name = c("sample3"),
  choose_longest_trans = TRUE
)
}


}
