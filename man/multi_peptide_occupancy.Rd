% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multiPeptide-occupancy.R
\name{multi_peptide_occupancy}
\alias{multi_peptide_occupancy}
\alias{multi_peptide_occupancy,ribotrans-method}
\title{Compute Multi-Peptide Ribosome Occupancy Scores}
\usage{
multi_peptide_occupancy(object, ...)

\S4method{multi_peptide_occupancy}{ribotrans}(
  object,
  merge_rep = FALSE,
  cds_fa = NULL,
  do_offset_correct = FALSE,
  position_shift = 0,
  exclude_length = c(100, 100),
  min_counts = 64,
  peptide_length = 3,
  peptide_occurrence = 100
)
}
\arguments{
\item{object}{A \code{ribotrans} object containing \strong{Ribo-seq} data.}

\item{...}{Additional arguments (currently unused).}

\item{merge_rep}{Logical. Whether to merge replicate samples by \code{sample_group}. Default is \code{FALSE}.}

\item{cds_fa}{A \strong{FASTA file path} containing CDS sequences for translation.}

\item{do_offset_correct}{Logical. If \code{TRUE}, performs \strong{offset correction}
using \code{do_offset_correction()}. \strong{Default}: \code{FALSE}.}

\item{position_shift}{Integer defining how much to adjust \strong{ribosome footprint positions}
during offset correction. \strong{Default}: \code{0}.}

\item{exclude_length}{A numeric vector of length 2 (default: \code{c(100,100)})
specifying the number of nucleotides to exclude from the start and end of CDS.}

\item{min_counts}{An integer (default: \code{64}), the minimum read count threshold
for filtering low-expression CDS.}

\item{peptide_length}{An integer (default: \code{3}), defining the length of the
peptide fragment (e.g., \strong{tri-peptides}).}

\item{peptide_occurrence}{An integer (default: \code{100}), the minimum occurrence
threshold for tri-peptide inclusion in the final dataset.}
}
\value{
A named \code{list} containing two data frames:
\itemize{
\item \code{long_format}: A tidy-format (long) \code{data.frame}, listing tri-peptides,
their pause scores, and occurrences across samples.
\item \code{wider_format}: A wide-format (wide) \code{data.frame}, where pause scores
are spread across different samples as columns.
}
}
\description{
This function calculates the ribosome density at the tri-peptide level from
Ribo-seq data, summarizing their pause scores and occurrences.
}
\details{
The function processes reads mapped to coding regions, filters low-coverage
transcripts, computes pause densities, and translates nucleotide sequences into
peptides. It subsequently aggregates pause scores for tri-peptides and filters
based on their occurrence.
}
\examples{
\dontrun{
  # Load a ribotrans object with ribosome footprint data
  ribo_obj <- load_ribotrans_data("riboseq_data.rds")

  # Specify a FASTA file containing CDS sequences
  cds_fa_path <- "cds_sequences.fasta"

  # Compute tri-peptide ribosome occupancy
  result <- multi_peptide_occupancy(ribo_obj, cds_fa = cds_fa_path)

  # Extract long and wide format results
  long_format <- result$long_format
  wide_format <- result$wider_format
}

}
