% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualization-QC.R
\name{period_plot}
\alias{period_plot}
\alias{period_plot,ribotrans-method}
\title{Plot Periodicity Analysis for Ribosome Profiling Data}
\usage{
period_plot(object, ...)

\S4method{period_plot}{ribotrans}(
  object,
  merge_rep = FALSE,
  return_data = FALSE,
  read_length = c(20, 35),
  group_by_readlength = TRUE,
  period_max = 10
)
}
\arguments{
\item{object}{A 'ribotrans' class object containing ribosome profiling data}

\item{...}{Additional arguments (currently unused).}

\item{merge_rep}{Logical; if TRUE, replicates of the same sample group will be merged (default: FALSE)}

\item{return_data}{Logical; if TRUE, returns the calculated Fourier transform data instead of a plot (default: FALSE)}

\item{read_length}{Numeric vector of length 2 specifying the minimum and maximum read lengths to include (default: c(20,35))}

\item{group_by_readlength}{Logical; if TRUE, analyses are performed and plotted separately for each read length (default: TRUE)}

\item{period_max}{Numeric; maximum period value to include in the output (default: 10)}
}
\value{
If return_data is FALSE, returns a ggplot object visualizing the periodicity analysis.
If return_data is TRUE, returns a data frame containing the Fourier transform results.
}
\description{
Performs Fourier transform analysis on ribosome profiling data to identify periodic patterns
in read distributions around start codons. This is particularly useful for detecting the
3-nucleotide periodicity characteristic of actively translating ribosomes.
}
\details{
The function filters reads by length, calculates relative positions to start codons,
performs Discrete Fourier Transform analysis, and visualizes the power spectrum.
When group_by_readlength is TRUE, the analysis is performed separately for each read length,
which is useful for comparing periodicity patterns across different read lengths.
}
\examples{
\dontrun{
# Create test data
test_data <- create_ribotrans_object(ribo_bam_files, sample_info)

# Basic usage
period_plot(test_data)

# Group by read length and merge replicates
period_plot(test_data, merge_rep = TRUE, group_by_readlength = TRUE)

# Return data instead of plot for custom visualization
fourier_data <- period_plot(test_data, return_data = TRUE)
}

}
