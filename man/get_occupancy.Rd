% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generic-methods.R,
%   R/serp-implementation-methods.R
\name{get_occupancy}
\alias{get_occupancy}
\alias{get_occupancy,ribotrans-method}
\alias{get_occupancy,serp-method}
\title{Extract Ribosome Occupancy for a Specific Gene}
\usage{
get_occupancy(object, ...)

\S4method{get_occupancy}{ribotrans}(
  object,
  gene_name = NULL,
  smooth = FALSE,
  coordinate_to_trans = FALSE,
  do_reads_offset = FALSE,
  merge_rep = FALSE,
  slide_window = 30
)

\S4method{get_occupancy}{serp}(
  object,
  gene_name = NULL,
  smooth = FALSE,
  serp_exp = c("total", "ip"),
  coordinate_to_trans = FALSE,
  do_reads_offset = FALSE,
  merge_rep = FALSE,
  slide_window = 30
)
}
\arguments{
\item{object}{An object of class 'serp'.}

\item{...}{Additional arguments (currently unused).}

\item{gene_name}{Character vector. Names of genes to extract data for. If NULL (default),
data for all genes will be extracted.}

\item{smooth}{Logical. Whether to apply smoothing to the occupancy profile. Default: FALSE.}

\item{coordinate_to_trans}{Logical. Whether to convert genome coordinates to transcript coordinates
when using genome mapping. Default: FALSE.}

\item{do_reads_offset}{Logical. Whether to apply read offset correction. Default: FALSE.}

\item{merge_rep}{Logical. If \code{TRUE}, average replicate samples within the same sample_group. Default: \code{FALSE}.}

\item{slide_window}{Numeric. Size of the sliding window for smoothing. Default: 30.}

\item{serp_exp}{Character. Experiment type to process, either "total" or "ip". Default: "total".}
}
\value{
The original \code{ribotrans} object with added/updated slots:
\itemize{
\item \code{ribo_occupancy}: A \code{data.frame} containing gene-specific ribosome profiles (position, count, rpm).
\item \code{ribo.smoothed}: A character indicating whether smoothing was applied ("TRUE"/"FALSE").
\item \code{gene_name}: The gene symbol analyzed.
}

An updated 'serp' object with the occupancy data stored in the corresponding slot
(either 'total_occupancy' or 'ip_occupancy').
}
\description{
Retrieves position-wise ribosome footprint occupancy and RPM values from a ribotrans object for a specified gene. Supports optional offset correction, replicate merging, coordinate transformations, and sliding window smoothing.

Extract and process occupancy data from ribosome profiling BAM files for an object of class 'serp'.
This method can process both total and IP (immunoprecipitation) samples.
}
\details{
This function is intended to extract transcript- or genome-level ribosome occupancy profiles for a single gene across multiple samples.
It supports:
\itemize{
\item Extracting counts/RPM mapped to either genome or transcript coordinates.
\item P-site offset correction per sample/read length.
\item Merging replicates based on sample group.
\item Optional smoothing of RPM signal using a sliding window.
}

If offset correction is enabled (\code{do_reads_offset = TRUE}), the method uses the offset table in \code{object@reads_offset_info} to adjust footprint positions.

This method extracts ribosome occupancy data from BAM files and processes it according
to the specified parameters. The method can handle both transcriptome and genome mappings,
and can apply various adjustments such as read offset correction and position smoothing.

The processing workflow includes:
\enumerate{
\item Extracting occupancy data based on mapping type (genome or transcriptome)
\item Optionally applying read offset correction based on stored offset information
\item Aggregating counts and RPM (reads per million) values by position
\item Optionally applying smoothing across positions
\item Storing the processed data in the appropriate slot of the 'serp' object
}
}
\examples{
\dontrun{
  # Extract ribosome density for gene "CDC4" across samples
  ribo_obj <- get_occupancy(object = ribo_obj,
                            gene_name = "CDC4",
                            smooth = TRUE,
                            do_reads_offset = TRUE,
                            merge_rep = FALSE)

  head(ribo_obj@ribo_occupancy)

}

\dontrun{
# Create a serp object
serp_obj <- construct_serp(
  genome_file = "genome.fa",
  gtf_file = "annotations.gtf",
  total_bam_file = "total_sample.bam",
  total_sample_name = "total_rep1",
  IP_bam_file = "IP_sample.bam",
  IP_sample_name = "IP_rep1"
)

# Get total occupancy data
serp_obj <- get_occupancy(serp_obj, serp_exp = "total")

# Get IP occupancy data with smoothing
serp_obj <- get_occupancy(serp_obj,
                         serp_exp = "ip",
                         smooth = TRUE,
                         slide_window = 15)

# Get occupancy for specific genes with read offset correction
serp_obj <- get_occupancy(serp_obj,
                         gene_name = "GENE1",
                         serp_exp = "total",
                         do_reads_offset = TRUE)
}

}
\seealso{
\code{\link{getOccupancy}}, \code{\link{getOccupancyGenome}}, \code{\link{smoothEachPosition}}
}
