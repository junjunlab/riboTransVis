% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generic-methods.R,
%   R/serp-implementation-methods.R
\name{get_occupancy}
\alias{get_occupancy}
\alias{get_occupancy,ribotrans-method}
\alias{get_occupancy,serp-method}
\title{Get Ribosome Occupancy from \code{ribotrans} Object}
\usage{
get_occupancy(object, ...)

\S4method{get_occupancy}{ribotrans}(
  object,
  gene_name = NULL,
  smooth = FALSE,
  coordinate_to_trans = FALSE,
  do_reads_offset = FALSE,
  slide_window = 30
)

\S4method{get_occupancy}{serp}(
  object,
  gene_name = NULL,
  smooth = FALSE,
  serp_exp = c("total", "ip"),
  coordinate_to_trans = FALSE,
  do_reads_offset = FALSE,
  slide_window = 30
)
}
\arguments{
\item{object}{An object of class 'serp'.}

\item{...}{Additional arguments passed to specific methods.}

\item{gene_name}{Character vector. Names of genes to extract data for. If NULL (default),
data for all genes will be extracted.}

\item{smooth}{Logical. Whether to apply smoothing to the occupancy profile. Default: FALSE.}

\item{coordinate_to_trans}{Logical. Whether to convert genome coordinates to transcript coordinates
when using genome mapping. Default: FALSE.}

\item{do_reads_offset}{Logical. Whether to apply read offset correction. Default: FALSE.}

\item{slide_window}{Numeric. Size of the sliding window for smoothing. Default: 30.}

\item{serp_exp}{Character. Experiment type to process, either "total" or "ip". Default: "total".}
}
\value{
A modified \code{ribotrans} object with ribosome occupancy information.

A modified \code{ribotrans} object that now contains:
\itemize{
\item \strong{\code{object@ribo_occupancy}}: A \code{data.frame} with ribosome occupancy values.
\item \strong{\code{object@ribo.smoothed}}: \code{"TRUE"} or \code{"FALSE"}, indicating whether occupancy data was smoothed.
}

An updated 'serp' object with the occupancy data stored in the corresponding slot
(either 'total_occupancy' or 'ip_occupancy').
}
\description{
This generic function retrieves ribosome occupancy from a \code{ribotrans} object.

This method extracts ribosome occupancy information from a \code{ribotrans} object,
optionally applying a smoothing transformation.

Extract and process occupancy data from ribosome profiling BAM files for an object of class 'serp'.
This method can process both total and IP (immunoprecipitation) samples.
}
\details{
Ribosome occupancy describes the density of ribosomes along a transcript.
This function processes \code{ribotrans} BAM files to compute read coverage, supporting both \strong{genome-aligned}
and \strong{transcriptome-aligned} data.

\strong{Analysis Steps:}
\enumerate{
\item Extracts mapped ribosome profiling BAM files from \code{object@bam_file} (filtered by \code{"ribo"} type).
\item Retrieves mapped read counts from \code{object@library} to normalize the occupancy.
\item Calls:
\itemize{
\item \code{getOccupancyGenome()} for \strong{genome-based BAM files}.
\item \code{getOccupancy()} for \strong{transcript-based BAM files}.
}
\item Merges all samples into a single \code{data.frame}.
\item \strong{If \code{smooth = "TRUE"}}, applies a \strong{sliding window smoothing} (\code{smoothEachPosition()}).
}

The processed data is stored in \code{object@ribo_occupancy}, and the smoothing status is recorded in \code{object@ribo.smoothed}.

This method extracts ribosome occupancy data from BAM files and processes it according
to the specified parameters. The method can handle both transcriptome and genome mappings,
and can apply various adjustments such as read offset correction and position smoothing.

The processing workflow includes:
\enumerate{
\item Extracting occupancy data based on mapping type (genome or transcriptome)
\item Optionally applying read offset correction based on stored offset information
\item Aggregating counts and RPM (reads per million) values by position
\item Optionally applying smoothing across positions
\item Storing the processed data in the appropriate slot of the 'serp' object
}
}
\examples{
\dontrun{
# Assume ribo_obj is a ribotrans object with ribosome BAM files
result <- get_occupancy(ribo_obj, gene_name = "TP53", smooth = "TRUE", slide_window = 50)
print(result@ribo_occupancy)
}

\dontrun{
# Create a serp object
serp_obj <- construct_serp(
  genome_file = "genome.fa",
  gtf_file = "annotations.gtf",
  total_bam_file = "total_sample.bam",
  total_sample_name = "total_rep1",
  IP_bam_file = "IP_sample.bam",
  IP_sample_name = "IP_rep1"
)

# Get total occupancy data
serp_obj <- get_occupancy(serp_obj, serp_exp = "total")

# Get IP occupancy data with smoothing
serp_obj <- get_occupancy(serp_obj,
                         serp_exp = "ip",
                         smooth = TRUE,
                         slide_window = 15)

# Get occupancy for specific genes with read offset correction
serp_obj <- get_occupancy(serp_obj,
                         gene_name = "GENE1",
                         serp_exp = "total",
                         do_reads_offset = TRUE)
}

}
\seealso{
\code{\link{get_occupancy,ribotrans-method}} for the specific method.

\itemize{
\item \code{\link{getOccupancyGenome}}: Extract occupancy from genome-mapped data.
\item \code{\link{getOccupancy}}: Extract occupancy from transcript-aligned data.
\item \code{\link{ribotrans}}: The S4 object storing this data.
}
}
